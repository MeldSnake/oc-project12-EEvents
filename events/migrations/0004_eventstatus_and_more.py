# Generated by Django 4.2 on 2023-05-02 19:22

from django.db import migrations, models
from typing import Type, TYPE_CHECKING
if TYPE_CHECKING:
    from events.models import Event, EventStatus


DEFAULT_STATUSES = [
    "financed",
    "planned",
    "pending",
    "completed",
]


def UpgradeEventStatus(apps, schema_editor):
    event_status: Type['EventStatus'] = apps.get_model("events", "EventStatus")
    event: Type['Event'] = apps.get_model("events", "Event")
    events = []
    for ev in event.objects.all():
        ev_status, _ = event_status.objects.get_or_create(name=ev.event_status_pre)
        ev.event_status = ev_status
        events.append(ev)
    if events != []:
        event.objects.bulk_update(events, ['event_status'])


def DowngradeEventStatus(apps, schema_editor):
    event: Type['Event'] = apps.get_model("events", "Event")
    for ev in event.objects.all():
        if ev.event_status is not None:
            ev.event_status_pre = ev.event_status.name
        else:
            ev.event_status_pre = DEFAULT_STATUSES[0]


def FillEventStatuses(apps, schema_editor):
    event_status: Type['EventStatus'] = apps.get_model("events", "EventStatus")
    for status in DEFAULT_STATUSES:
        event_status.objects.get_or_create(name=status)


def RemoveEventStatuses(apps, schema_editor):
    event_status: Type['EventStatus'] = apps.get_model("events", "EventStatus")
    event_status.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0003_alter_event_event_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True, verbose_name='Status name')),
            ],
            options={
                'verbose_name': 'event status',
                'verbose_name_plural': 'event statuses',
            },
        ),
        migrations.RenameField(
            model_name='event',
            old_name='event_status',
            new_name='event_status_pre',
        ),
        migrations.AddField(
            model_name='event',
            name='event_status',
            field=models.ForeignKey(null=True, on_delete=models.deletion.SET_NULL, to='events.eventstatus'),
        ),
        migrations.RunPython(FillEventStatuses, RemoveEventStatuses),
        migrations.RunPython(UpgradeEventStatus, DowngradeEventStatus),
        migrations.RemoveField(
            model_name='event',
            name='event_status_pre',
        ),
    ]
